<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>File Sharing</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      margin: 0;
      display: flex;
      flex-direction: column;
      margin: 10px;
      background-color: #333;

      height: 97vh;
    }

    .container {
      display: flex;
      flex: 1;
      /* border: 4px solid #00bcd4; */
      background: 0px 10px 20px rgba(0, 0, 0, 0.2);
      background-color: #333;
      /* background-color: #1e1e1e; */


    }

    .upload-section {
  background: url('your-image-url.jpg') center/cover;
  padding: 100px;
  
  /* border: 2px solid #000000; */
  border-radius: 0;
  box-shadow: 0px 8px 20px rgba(0, 0, 0, 0.2);
  flex: 1;
  text-align: center;
  overflow: hidden;
  transition: background 0.3s ease, box-shadow 0.3s ease;
  font-family: 'YourChosenFont', sans-serif; /* Replace 'YourChosenFont' with the desired font name */
}

/* .upload-section:hover {
  background: #ecf0f1;
  box-shadow: 0px 12px 25px rgba(0, 0, 0, 0.3);
} */

    .upload-message {
      margin-bottom: 1.5rem;
      font-size: 18px;
      color: #4caf50;
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .file-link {
      color: #2962ff;
      text-decoration: none;
      transition: color 0.3s ease;
      margin-top: 10px;
      word-wrap: break-word;
    }

    .file-link:hover {
      color: #0039cb;
    }
  form {
  border: 4px solid #00bcd4; /* Cyan border */
  border-radius: 8px;
  padding: 30px;
}
    .form-label {
      color: #ffffff;
      font-size: 16px;
        padding: 30px;

    }

    .form-input {
  width: calc(100% - 20px);
  padding: 12px;
  border: none; /* Remove the default border */
  border: 2px solid #ffffff; /* Add a bottom border with your preferred color */
  border-radius: 8px;
  font-size: 16px;
  margin-bottom: 20px;
  transition: border-color 0.3s ease;
  box-sizing: border-box;
  cursor: pointer;
}

.form-input:focus {
  border-color: #0039cb;
  outline: none; /* Remove the default focus outline */
}

    .share-button {
      background-color: #2962ff;
      color: #ffffff;
      border: 2px solid #2962ff;
      border-radius: 8px;
      padding: 14px 28px;
      font-size: 18px;
      cursor: pointer;
      transition: background-color 0.3s ease, transform 0.3s ease;
    }

    .share-button:hover {
      background-color: #388e3c;
      transform: scale(1.1);
    }

    .preview-section {
      background-color: #333;
      padding: 30px;
      /* border: #000000 2px solid; */
      box-shadow: 0px 8px 20px rgba(0, 0, 0, 0.2);
      flex: 1;
      text-align: center;
      overflow: hidden;
      transition: background-color 0.3s ease, box-shadow 0.3s ease;
    }

    /* .preview-section:hover {
      background-color: #ecf0f1;
      box-shadow: 0px 12px 25px rgba(0, 0, 0, 0.3);
    } */

    .preview-button {
      background-color: #2962ff;
      color: #ffffff;
      border: 2px solid #2962ff;
      border-radius: 8px;
      padding: 14px 28px;
      font-size: 18px;
      cursor: pointer;
      transition: background-color 0.3s ease, transform 0.3s ease;
    }

    .preview-button:hover {
      background-color: #388e3c;
      transform: scale(1.1);
    }

    .file-preview-container {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
    }

    .file-preview {
      max-width: 100%;
      height: auto;
      margin: 5px;
    }

    .pdf-preview {
      width: 100vw;
      height: 80vh;
      border: 1px solid #ccc;
    }

    .file-preview video,
    .file-preview audio {
      max-width: 100%;
      height: auto;
    }
  </style>
  <!-- Your JavaScript code remains unchanged -->


  <script>
    window.onload = function () {
      // Clear file link, input values, and hide preview on page reload
      if (window.performance && window.performance.navigation.type === window.performance.navigation.TYPE_RELOAD) {
        document.querySelector('.upload-message').style.display = 'none';
        document.querySelector('.file-link').textContent = '';
        document.querySelector('#file').value = '';
        document.querySelector('#password').value = '';
        hideFilePreview();
      }
    };

    function displayFilePreview() {
      const fileInput = document.getElementById('file');
      const filePreviewContainer = document.getElementById('file-preview-container');

      // Clear existing previews
      filePreviewContainer.innerHTML = '';

      if (fileInput.files && fileInput.files.length > 0) {
        // Loop through each selected file
        for (const file of fileInput.files) {
          const reader = new FileReader();
          const filePreview = document.createElement('div');

          reader.onload = function (e) {
            if (file.type.startsWith('image/')) {
              const imgPreview = document.createElement('img');
              imgPreview.src = e.target.result;
              imgPreview.classList.add('file-preview');
              filePreview.appendChild(imgPreview);
            } else if (file.type === 'application/pdf') {
              const pdfPreview = document.createElement('object');
              pdfPreview.type = 'application/pdf';
              pdfPreview.data = e.target.result;
              pdfPreview.classList.add('file-preview', 'pdf-preview');
              filePreview.appendChild(pdfPreview);
            } else if (file.type.startsWith('text/')) {
              const textPreview = document.createElement('pre');
              textPreview.textContent = e.target.result;
              filePreview.appendChild(textPreview);
            } else if (file.type.startsWith('video/')) {
              const videoPreview = document.createElement('video');
              videoPreview.src = e.target.result;
              videoPreview.controls = true;
              videoPreview.classList.add('file-preview');
              filePreview.appendChild(videoPreview);
            }
            filePreviewContainer.appendChild(filePreview);
          };

          reader.readAsDataURL(file);
        }
      }
    }

    function hideFilePreview() {
      const filePreviewContainer = document.getElementById('file-preview-container');
      filePreviewContainer.innerHTML = '';
    }
  </script>
</head>

<body>
  <div class="container">
    <div class="upload-section">
      <% if (locals.fileLink != null) { %>
      <div class="upload-message">
        <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24" width="32" height="32">
          <path d="M0 0h24v24H0z" fill="none" />
          <path d="M12 2a10 10 0 1010 10A10 10 0 0012 2zm2 14h-4v-2h4v2zm0-4h-4V6h4v6z" />
        </svg>
        Your file has been uploaded! Access it using the link below:
        <br>
        <a class="file-link" href="<%= locals.fileLink %>"><%= locals.fileLink %></a>
      </div>
      <% } %>
      <form action="/upload" method="post" enctype="multipart/form-data">
        <label class="form-label" for="file">Choose Files:</label>
        <input class="form-input" type="file" id="file" name="file" required multiple />
        <label class="form-label" for="password">Password (optional):</label>
        <input class="form-input" type="password" id="password" name="password" />
        <button class="share-button" type="submit">Share</button>
      </form>
    </div>

    <div class="preview-section">
      <label class="form-label" for="file">Preview Files:</label>
      <button class="preview-button" type="button" onclick="displayFilePreview()">Preview Files</button>
      <div class="file-preview-container" id="file-preview-container"></div>
    </div>
  </div>

  <script>
    window.onload = function () {
      // Clear file link, input values, and hide preview on page reload
      if (window.performance && window.performance.navigation.type === window.performance.navigation.TYPE_RELOAD) {
        document.querySelector('.upload-message').style.display = 'none';
        document.querySelector('.file-link').textContent = '';
        document.querySelector('#file').value = '';
        document.querySelector('#password').value = '';
        hideFilePreview();
      }
    };

    function displayFilePreview() {
      const fileInput = document.getElementById('file');
      const filePreviewContainer = document.getElementById('file-preview-container');

      // Clear existing previews
      filePreviewContainer.innerHTML = '';

      if (fileInput.files && fileInput.files.length > 0) {
        // Loop through each selected file
        for (const file of fileInput.files) {
          const reader = new FileReader();
          const filePreview = document.createElement('div');

          reader.onload = function (e) {
            if (file.type.startsWith('image/')) {
              const imgPreview = document.createElement('img');
              imgPreview.src = e.target.result;
              imgPreview.classList.add('file-preview');
              filePreview.appendChild(imgPreview);
            } else if (file.type === 'application/pdf') {
              const pdfPreview = document.createElement('object');
              pdfPreview.type = 'application/pdf';
              pdfPreview.data = e.target.result;
              pdfPreview.classList.add('file-preview', 'pdf-preview');
              filePreview.appendChild(pdfPreview);
            } else if (file.type.startsWith('text/')) {
              const textPreview = document.createElement('pre');
              textPreview.textContent = e.target.result;
              filePreview.appendChild(textPreview);
            } else if (file.type.startsWith('video/')) {
              const videoPreview = document.createElement('video');
              videoPreview.src = e.target.result;
              videoPreview.controls = true;
              videoPreview.classList.add('file-preview');
              filePreview.appendChild(videoPreview);
            }
            filePreviewContainer.appendChild(filePreview);
          };

          reader.readAsDataURL(file);
        }
      }
    }

    function hideFilePreview() {
      const filePreviewContainer = document.getElementById('file-preview-container');
      filePreviewContainer.innerHTML = '';
    }
  </script>
</body>

</html>
